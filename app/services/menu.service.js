"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var firebase = require("nativescript-plugin-firebase");
var MenuService = /** @class */ (function () {
    function MenuService() {
        this.menu = new Array({ cafe: 1, item: 1, name: "Samosa", price: "$10" }, { cafe: 1, item: 2, name: "Shashi Paneer", price: "$20" }, { cafe: 1, item: 3, name: "Chicken ka kuch", price: "$15" }, { cafe: 1, item: 4, name: "Donkey balls", price: "$1" });
    }
    MenuService.prototype.getMenuItems = function (id) {
        var _this = this;
        var base = "/businessName/cafe";
        var cafeName = base.concat(id.toString());
        cafeName = cafeName.concat("/menu");
        console.log("in menu service " + cafeName);
        var a = firebase.query(function () {
        }, cafeName, {
            singleEvent: true,
            orderBy: {
                type: firebase.QueryOrderByType.KEY
            }
        }).then((function (res) {
            console.log("something should come here", JSON.stringify(res.value));
            var b = res.value;
            //console.log(JSON.stringify(b.menu));
            //console.log(JSON.stringify(b.menu.menuItem1.name));
            //var c = JSON.stringify(b.menu);
            //var d = b.menu;
            //console.log("length is " + res.value.menu.getChildrenCount());
            _this.menu.push(res.value);
            console.log("length is " + _this.menu.length);
        })).catch((function (res) {
            console.log("yahan kuch panga hai...", res);
        }));
        return this.menu;
    };
    MenuService = __decorate([
        core_1.Injectable()
    ], MenuService);
    return MenuService;
}());
exports.MenuService = MenuService;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibWVudS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0NBQTJDO0FBSTNDLHVEQUEwRDtBQUcxRDtJQURBO1FBRVksU0FBSSxHQUFHLElBQUksS0FBSyxDQUNwQixFQUFFLElBQUksRUFBQyxDQUFDLEVBQUMsSUFBSSxFQUFDLENBQUMsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUMsRUFDOUMsRUFBRSxJQUFJLEVBQUMsQ0FBQyxFQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLGVBQWUsRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFDLEVBQ3RELEVBQUUsSUFBSSxFQUFDLENBQUMsRUFBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxpQkFBaUIsRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFDLEVBQ3hELEVBQUUsSUFBSSxFQUFDLENBQUMsRUFBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBQyxDQUV2RCxDQUFDO0lBdUNOLENBQUM7SUFyQ0csa0NBQVksR0FBWixVQUFhLEVBQUU7UUFBZixpQkFrQ0M7UUFoQ0csSUFBSSxJQUFJLEdBQUcsb0JBQW9CLENBQUM7UUFDaEMsSUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztRQUMxQyxRQUFRLEdBQUcsUUFBUSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNwQyxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixHQUFHLFFBQVEsQ0FBQyxDQUFDO1FBRTNDLElBQUksQ0FBQyxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQ2xCO1FBQ0EsQ0FBQyxFQUNELFFBQVEsRUFDUjtZQUNJLFdBQVcsRUFBRSxJQUFJO1lBQ2pCLE9BQU8sRUFBRTtnQkFDTCxJQUFJLEVBQUUsUUFBUSxDQUFDLGdCQUFnQixDQUFDLEdBQUc7YUFDdEM7U0FDSixDQUNKLENBQUMsSUFBSSxDQUNGLENBQUMsVUFBQSxHQUFHO1lBQ0EsT0FBTyxDQUFDLEdBQUcsQ0FBQyw0QkFBNEIsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1lBQ3JFLElBQUksQ0FBQyxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUM7WUFDbEIsc0NBQXNDO1lBQ3RDLHFEQUFxRDtZQUNyRCxpQ0FBaUM7WUFDakMsaUJBQWlCO1lBQ2pCLGdFQUFnRTtZQUNoRSxLQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDMUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLEdBQUcsS0FBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNqRCxDQUFDLENBQUMsQ0FDTCxDQUFDLEtBQUssQ0FBQyxDQUFDLFVBQUEsR0FBRztZQUNSLE9BQU8sQ0FBQyxHQUFHLENBQUMseUJBQXlCLEVBQUUsR0FBRyxDQUFDLENBQUE7UUFDL0MsQ0FBQyxDQUFDLENBQUMsQ0FBQTtRQUVILE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQ3JCLENBQUM7SUEzQ1EsV0FBVztRQUR2QixpQkFBVSxFQUFFO09BQ0EsV0FBVyxDQThDdkI7SUFBRCxrQkFBQztDQUFBLEFBOUNELElBOENDO0FBOUNZLGtDQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5cbmltcG9ydCB7IEl0ZW0gfSBmcm9tIFwiLi4vZGF0YXR5cGVzL2l0ZW1cIjtcbmltcG9ydCB7TWVudX0gZnJvbSBcIi4uL2RhdGF0eXBlcy9tZW51XCI7XG5pbXBvcnQgZmlyZWJhc2UgPSByZXF1aXJlKFwibmF0aXZlc2NyaXB0LXBsdWdpbi1maXJlYmFzZVwiKTtcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIE1lbnVTZXJ2aWNlIHtcbiAgICBwcml2YXRlIG1lbnUgPSBuZXcgQXJyYXk8TWVudT4oXG4gICAgICAgIHsgY2FmZToxLGl0ZW06MSwgbmFtZTogXCJTYW1vc2FcIiwgcHJpY2U6IFwiJDEwXCJ9LFxuICAgICAgICB7IGNhZmU6MSxpdGVtOiAyLCBuYW1lOiBcIlNoYXNoaSBQYW5lZXJcIiwgcHJpY2U6IFwiJDIwXCJ9LFxuICAgICAgICB7IGNhZmU6MSxpdGVtOiAzLCBuYW1lOiBcIkNoaWNrZW4ga2Ega3VjaFwiLCBwcmljZTogXCIkMTVcIn0sXG4gICAgICAgIHsgY2FmZToxLGl0ZW06IDQsIG5hbWU6IFwiRG9ua2V5IGJhbGxzXCIsIHByaWNlOiBcIiQxXCJ9XG5cbiAgICApO1xuXG4gICAgZ2V0TWVudUl0ZW1zKGlkKTogTWVudVtdIHtcblxuICAgICAgICB2YXIgYmFzZSA9IFwiL2J1c2luZXNzTmFtZS9jYWZlXCI7XG4gICAgICAgIHZhciBjYWZlTmFtZSA9IGJhc2UuY29uY2F0KGlkLnRvU3RyaW5nKCkpO1xuICAgICAgICBjYWZlTmFtZSA9IGNhZmVOYW1lLmNvbmNhdChcIi9tZW51XCIpO1xuICAgICAgICBjb25zb2xlLmxvZyhcImluIG1lbnUgc2VydmljZSBcIiArIGNhZmVOYW1lKTtcblxuICAgICAgICB2YXIgYSA9IGZpcmViYXNlLnF1ZXJ5KFxuICAgICAgICAgICAgKCk9PiB7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2FmZU5hbWUsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2luZ2xlRXZlbnQ6IHRydWUsXG4gICAgICAgICAgICAgICAgb3JkZXJCeToge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBmaXJlYmFzZS5RdWVyeU9yZGVyQnlUeXBlLktFWVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKS50aGVuKFxuICAgICAgICAgICAgKHJlcz0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcInNvbWV0aGluZyBzaG91bGQgY29tZSBoZXJlXCIsIEpTT04uc3RyaW5naWZ5KHJlcy52YWx1ZSkpO1xuICAgICAgICAgICAgICAgIHZhciBiID0gcmVzLnZhbHVlO1xuICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkoYi5tZW51KSk7XG4gICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeShiLm1lbnUubWVudUl0ZW0xLm5hbWUpKTtcbiAgICAgICAgICAgICAgICAvL3ZhciBjID0gSlNPTi5zdHJpbmdpZnkoYi5tZW51KTtcbiAgICAgICAgICAgICAgICAvL3ZhciBkID0gYi5tZW51O1xuICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coXCJsZW5ndGggaXMgXCIgKyByZXMudmFsdWUubWVudS5nZXRDaGlsZHJlbkNvdW50KCkpO1xuICAgICAgICAgICAgICAgIHRoaXMubWVudS5wdXNoKHJlcy52YWx1ZSk7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJsZW5ndGggaXMgXCIgKyB0aGlzLm1lbnUubGVuZ3RoKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICkuY2F0Y2goKHJlcz0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwieWFoYW4ga3VjaCBwYW5nYSBoYWkuLi5cIiwgcmVzKVxuICAgICAgICB9KSlcbiAgICAgICAgXG4gICAgICAgIHJldHVybiB0aGlzLm1lbnU7XG4gICAgfVxuXG5cbn1cbiJdfQ==
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// this import should be first in order to load some required settings (like globals and reflect-metadata)
var platform_1 = require("nativescript-angular/platform");
var app_module_1 = require("./app.module");
var element_registry_1 = require("nativescript-angular/element-registry");
var app = require("application");
var platform = require("platform");
element_registry_1.registerElement("CreditCardView", function () { return require("nativescript-stripe").CreditCardView; });
app.on(app.launchEvent, function (args) {
    if (platform.isIOS) {
        //"pk_live_vQDnFzdF5EDZmRqSf7z5b0yG"
        //"pk_test_l6tuKlddwfIkKUWlYj1HnxiB"
        STPPaymentConfiguration.sharedConfiguration().publishableKey = "pk_live_vQDnFzdF5EDZmRqSf7z5b0yG";
        console.log("stripe key is " + STPPaymentConfiguration.sharedConfiguration().publishableKey);
    }
});
// A traditional NativeScript application starts by initializing global objects, setting up global CSS rules, creating, and navigating to the main page. 
// Angular applications need to take care of their own initialization: modules, components, directives, routes, DI providers. 
// A NativeScript Angular app needs to make both paradigms work together, so we provide a wrapper platform object, platformNativeScriptDynamic, 
// that sets up a NativeScript application and can bootstrap the Angular framework.
platform_1.platformNativeScriptDynamic().bootstrapModule(app_module_1.AppModule);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm1haW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwwR0FBMEc7QUFDMUcsMERBQTRFO0FBRTVFLDJDQUF5QztBQUV6QywwRUFBd0U7QUFFeEUsaUNBQW1DO0FBQ25DLG1DQUFxQztBQUlyQyxrQ0FBZSxDQUFDLGdCQUFnQixFQUFFLGNBQU0sT0FBQSxPQUFPLENBQUMscUJBQXFCLENBQUMsQ0FBQyxjQUFjLEVBQTdDLENBQTZDLENBQUMsQ0FBQztBQUV2RixHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsVUFBQyxJQUFJO0lBQ3pCLEVBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ2pCLG9DQUFvQztRQUNwQyxvQ0FBb0M7UUFDcEMsdUJBQXVCLENBQUMsbUJBQW1CLEVBQUUsQ0FBQyxjQUFjLEdBQUcsa0NBQWtDLENBQUM7UUFDbEcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsR0FBRyx1QkFBdUIsQ0FBQyxtQkFBbUIsRUFBRSxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQ2pHLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQztBQUVILHlKQUF5SjtBQUN6Siw4SEFBOEg7QUFDOUgsZ0pBQWdKO0FBQ2hKLG1GQUFtRjtBQUNuRixzQ0FBMkIsRUFBRSxDQUFDLGVBQWUsQ0FBQyxzQkFBUyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyB0aGlzIGltcG9ydCBzaG91bGQgYmUgZmlyc3QgaW4gb3JkZXIgdG8gbG9hZCBzb21lIHJlcXVpcmVkIHNldHRpbmdzIChsaWtlIGdsb2JhbHMgYW5kIHJlZmxlY3QtbWV0YWRhdGEpXG5pbXBvcnQgeyBwbGF0Zm9ybU5hdGl2ZVNjcmlwdER5bmFtaWMgfSBmcm9tIFwibmF0aXZlc2NyaXB0LWFuZ3VsYXIvcGxhdGZvcm1cIjtcblxuaW1wb3J0IHsgQXBwTW9kdWxlIH0gZnJvbSBcIi4vYXBwLm1vZHVsZVwiO1xuXG5pbXBvcnQgeyByZWdpc3RlckVsZW1lbnQgfSBmcm9tIFwibmF0aXZlc2NyaXB0LWFuZ3VsYXIvZWxlbWVudC1yZWdpc3RyeVwiO1xuXG5pbXBvcnQgKiBhcyBhcHAgZnJvbSBcImFwcGxpY2F0aW9uXCI7XG5pbXBvcnQgKiBhcyBwbGF0Zm9ybSBmcm9tIFwicGxhdGZvcm1cIjtcblxuZGVjbGFyZSBjb25zdCBTVFBQYXltZW50Q29uZmlndXJhdGlvbjtcblxucmVnaXN0ZXJFbGVtZW50KFwiQ3JlZGl0Q2FyZFZpZXdcIiwgKCkgPT4gcmVxdWlyZShcIm5hdGl2ZXNjcmlwdC1zdHJpcGVcIikuQ3JlZGl0Q2FyZFZpZXcpO1xuXG5hcHAub24oYXBwLmxhdW5jaEV2ZW50LCAoYXJncykgPT4ge1xuICAgIGlmIChwbGF0Zm9ybS5pc0lPUykge1xuICAgICAgICAvL1wicGtfbGl2ZV92UURuRnpkRjVFRFptUnFTZjd6NWIweUdcIlxuICAgICAgICAvL1wicGtfdGVzdF9sNnR1S2xkZHdmSWtLVVdsWWoxSG54aUJcIlxuICAgICAgICBTVFBQYXltZW50Q29uZmlndXJhdGlvbi5zaGFyZWRDb25maWd1cmF0aW9uKCkucHVibGlzaGFibGVLZXkgPSBcInBrX2xpdmVfdlFEbkZ6ZEY1RURabVJxU2Y3ejViMHlHXCI7XG4gICAgICAgIGNvbnNvbGUubG9nKFwic3RyaXBlIGtleSBpcyBcIiArIFNUUFBheW1lbnRDb25maWd1cmF0aW9uLnNoYXJlZENvbmZpZ3VyYXRpb24oKS5wdWJsaXNoYWJsZUtleSk7XG4gICAgfVxufSk7XG5cbi8vIEEgdHJhZGl0aW9uYWwgTmF0aXZlU2NyaXB0IGFwcGxpY2F0aW9uIHN0YXJ0cyBieSBpbml0aWFsaXppbmcgZ2xvYmFsIG9iamVjdHMsIHNldHRpbmcgdXAgZ2xvYmFsIENTUyBydWxlcywgY3JlYXRpbmcsIGFuZCBuYXZpZ2F0aW5nIHRvIHRoZSBtYWluIHBhZ2UuIFxuLy8gQW5ndWxhciBhcHBsaWNhdGlvbnMgbmVlZCB0byB0YWtlIGNhcmUgb2YgdGhlaXIgb3duIGluaXRpYWxpemF0aW9uOiBtb2R1bGVzLCBjb21wb25lbnRzLCBkaXJlY3RpdmVzLCByb3V0ZXMsIERJIHByb3ZpZGVycy4gXG4vLyBBIE5hdGl2ZVNjcmlwdCBBbmd1bGFyIGFwcCBuZWVkcyB0byBtYWtlIGJvdGggcGFyYWRpZ21zIHdvcmsgdG9nZXRoZXIsIHNvIHdlIHByb3ZpZGUgYSB3cmFwcGVyIHBsYXRmb3JtIG9iamVjdCwgcGxhdGZvcm1OYXRpdmVTY3JpcHREeW5hbWljLCBcbi8vIHRoYXQgc2V0cyB1cCBhIE5hdGl2ZVNjcmlwdCBhcHBsaWNhdGlvbiBhbmQgY2FuIGJvb3RzdHJhcCB0aGUgQW5ndWxhciBmcmFtZXdvcmsuXG5wbGF0Zm9ybU5hdGl2ZVNjcmlwdER5bmFtaWMoKS5ib290c3RyYXBNb2R1bGUoQXBwTW9kdWxlKTtcbiJdfQ==